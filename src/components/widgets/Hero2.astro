---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative not-prose" {...id ? { id } : {}}>
  <div class="absolute pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>
  <div class="relative w-full mx-auto px-4 sm:px-6">
    <div class="pt-0 pointer-events-none"></div>
    <div class="pb-12 md:pb-20">
      <div class="basis-1/2">
        {
          image && (
            <div class="w-full h-[70vh] lg:h-[85vh] object-cover m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="w-full h-[70vh] lg:h-[85vh] object-cover"
                  widths={[400, 768, 1024, 2040, 3840]}
                  sizes="100vw"
                  loading="eager"
                  width={4123}
                  height={6185}
                  alt="Hero Image"
                  fetchpriority="high"
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
      <div class="basis-1/2 text-center pt-10 md:pb-16 mx-auto">
        {
          title && (
            <h1
              class="text-3xl md:text-4xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200 intersect-once motion-safe:intersect:animate-fade motion-safe:opacity-0 intersect-quarter"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto">
          {
            subtitle && (
              <p
                class="text-xl text-muted mb-6 dark:text-slate-300 intersect-once motion-safe:intersect:animate-fade motion-safe:opacity-0 intersect-quarter"
                set:html={subtitle}
              />
            )
          }

          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 lg:max-w-7xl intersect-once motion-safe:intersect:animate-fade motion-safe:opacity-0 intersect-quarter">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" id="heroCall"/>
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
          {
          tagline && (
            <p
              class="text-base text-secondary dark:text-blue-200 font-bold tracking-wide uppercase intersect-once motion-safe:intersect:animate-fade motion-safe:opacity-0 intersect-quarter"
              set:html={tagline}
            />
          )
        }
        </div>
        {content && <Fragment set:html={content} />}
      </div>
    </div>
  </div>
</section>
